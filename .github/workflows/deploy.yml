name: CI/CD using AWS ECR ECS

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

      # JDK 설정
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 캐시 삭제
      - name: Clean Gradle Cache
        run: rm -rf ~/.gradle/caches/

      # Gradle 캐싱
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 환경별 yml 파일 생성 - application.yml
      - name: make application.yml
        if: contains(github.ref, 'main')
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.YML }}" > ./application.yml
        shell: bash

      # 환경별 yml 파일 생성 - prod
      - name: make application-prod.yml
        if: contains(github.ref, 'main')
        run: |
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.YML_PROD }}" > ./application-prod.yml
        shell: bash

      # Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build -x checkstyleMain -x checkstyleTest -x editorconfigCheck -x test

      # AWS 자격 증명 구성
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ACCESS_KEY_SECRET }}
          aws-region: ap-northeast-2

      # Amazon ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

# Docker 빌드 및 ECR에 푸시
      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t olol/repository .
          docker tag olol/repository:latest 341931614219.dkr.ecr.ap-northeast-2.amazonaws.com/olol/repository:latest
          docker push 341931614219.dkr.ecr.ap-northeast-2.amazonaws.com/olol/repository:latest
